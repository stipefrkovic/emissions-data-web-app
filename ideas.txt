REQ1:
1. CRUD population and GDP of a country (identified by ISO or name) by year
2. R o2, methane, nitrous oxide, and total ghg columns (at min) of a country (identified by ISO or name), optionally filter by year+later
3. R on share of temperature, change from, and temperature change from * columns of a continent, optionally filter by year+later
4. R energy per capita and per GDP data for all countries in a given year, sorted per population size and returned in batches of M = {10, 20, 50, 100}
5. R top or bottom N (>= 1) countries based on temperature change from ghg for a specific year or for the previous M (>= 1) years.

Relational database:

AREA
area_name String

COUNTRY
area_name String
iso_code String
Foreign Key (area_name)

CONTINENT
area_name String
Foreign Key (area_name)

STAT
area_name String
year Integer
# GENERAL_STATS (CRUD)
population Integer
gdp Integer
# EMISSION_STATS (R)
co2 Float
methane Float
nitrous_oxide Float
total_ghg Float
# TEMP_CHANGE_STATS (R)
share_of_temperature_change_from_ghg Float
temperature_change_from_ch4 Float
temperature_change_from_co2 Float
temperature_change_from_ghg Float
temperature_change_from_n2o Float
# ENERGY_STATS (R)
energy_per_capita Float
energy_per_gdp Float
Foreign Key (area_name)


REQ2: 
1. Endpoints should support both JSON and CSV
2. JSON should be the default if none is specified
3. HTML should never be returned (or be visible in the browser path?), including error messages

REQ3:
1. API documentation must have a name and a short description
2. How to access it
3. Representations of what resources it accepts and returns
4. Errors and their meaning