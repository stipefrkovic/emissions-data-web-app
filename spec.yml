openapi: '3.0.2'
info:
  title: Emission Data API
  version: '1.0'
  description: 'Specification of the emission data API from Group 23 
                of the 2023-24 Web Engineering course at the University of Groningen.'


servers:
  - url: http://localhost:3000
    description: ExpressJS backend

# fix params in some methods 

components:
  schemas:
    general:
      type: object
      properties:
        gdp:
          type: integer
          description: GDP of the country
        population:
          type: integer
          description: Population of the country

    emission:
      type: object
      properties:
        co2:
          type: number
          description: CO2 emission of the country
        methane:
          type: number
          description: Methane emission of the country
        nitrous oxide:
          type: number
          description: Nitrous oxide emission of the country
        total ghg:
          type: number
          description: Total greenhouse gas emission of the country

    temp-change:
      type: object
      properties:
        share of temperature change from:
          type: number
          description: Temperature change of the country
        temperature change from *:
          type: number
          description: Temperature change of the country
    energy:
      type: object
      properties:
        energy per capita:
          type: number
          description: Energy per capita of the country
        GDP per capita:
          type: number
          description: GDP per capita of the country

    country:
      type: object
      properties:
        name:
          type: string
          description: name of the country
        share of temperature change from ghg:
          type: number
          description: share of temperature change from ghg of the country
  
  responses:
    BadRequest:
      description: Request was not well-formed, see error details
      content:
        application/json:
          schema:
            type: object
            properties:
              error-message:
                type: string
                description: Error message detailing the problem with the request
          example:
            error-message: The request body has an invalid entry.
        text/csv:
          schema:
            type: object
            description: Error message detailing the problem with the request
          example: The request body has an invalid entry.

    NotFound:
      description: Resource not found

    NoResults:
      description: List empty; no results

    ServerError:
      description: Server error; no results, try again later

paths:
  /records/general:
    post:
      summary: Create a general record
      tags: 
        - All Records
        - General Records
      description: Create the record with population and GDP data of a country for a specific year
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: string
                  description: Country name or its ISO code
                year:
                  type: integer
                  description: Year of the creation of the record
                gdp:
                  type: integer
                  description: GDP of the country
                population:
                  type: integer
                  description: Population of the country
          text/csv:
            schema:
                type: object
            example: |
              country, string
              year, 0
              gdp, 0
              population, 0
      responses:
        '201':
          description: General information succesfully created
          headers:
              Location:
                schema:
                  type: string
                description: The URL of the newly-created general record
        '400':
          description: Request was not well-formed, see error details
          content:
            application/json:
              schema:
                type: object
                properties:
                  error-message:
                    type: string
                    description: Error message detailing the problem with the request
              example:
                error-message: The request body has an invalid entry.
            text/csv:
              schema:
                type: object
                description: Error message detailing the problem with the request
              example: The request body has an invalid entry.

        '409':
          description: Record with the same name already exists
          headers:
            Location:
              schema:
                type: string
              description: The URL of the pre-existing record

        '5XX':
          $ref: '#/components/responses/ServerError'
  
  /records/{country}/{year}/general:
    parameters:
      - name: country
        in: path
        required: true
        description: Name of the country or the ISO 3166-1 alpha-3 code of the country
        schema:
          type: string
      - name: year
        in: path
        required: true
        description: "Year of the creation of the records (range: 1900-1999)"
        schema:
          type: string
          minimum: 1900
          maximum: 1999
    get:
      summary: Retrieve a general record
      tags: 
        - All Records
        - General Records
      description: Retrieve the record with population and GDP data of a country for a specific year
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/general"
            text/csv:
              schema:
                type: object
              example: |
                gdp, 0
                population, 0

        '400':
          $ref: '#/components/responses/BadRequest'

        '404':
          $ref: "#/components/responses/NotFound"

        '5XX':
          $ref: '#/components/responses/ServerError'
    put:
      summary: Update a general record
      tags:
        - All Records
        - General Records
      description: Update the record with population and GDP data of a country for a specific year
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/general"
          text/csv:
            schema:
                type: object
            example: |
              gdp, 0
              population, 0
      responses:
        '200':
          description: General record updated, returns the new state
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/general"
            text/csv:
              schema:
                type: object
              example: |
                gdp, 0
                population, 0
        '400':
          $ref: '#/components/responses/BadRequest'

        '404':
          $ref: "#/components/responses/NotFound"

        '5XX':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete a general record
      tags: 
        - All Records
        - General Records
      description: Delete the record with population and GDP data of a country for a specific year
      responses:
        '204':
          description: General info succesfully deleted
        '400':
          $ref: '#/components/responses/BadRequest'

        '404':
          $ref: "#/components/responses/NotFound"

        '5XX':
          $ref: '#/components/responses/ServerError'
  
  /records/{country}/emission:
    parameters:
      - name: country
        in: path
        required: true
        description: Name of the country or the ISO 3166-1 alpha-3 code of the country
        schema:
          type: string
      - name: year
        in: query
        required: false
        description: "Year of the creation of the records (range: 1900-1999)"
        schema:
          type: string
          minimum: 1900
          maximum: 1999
    get:
      summary: Retrieve an emission record
      tags: 
        - All Records
        - Emission Records
      description: Retrieve emission record(s) of a country, optionally since a specified year and later
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/emission"
            text/csv:
              schema:
                type: array
              example: |
                co2, 0
                methane, 0
                nitrous oxide, 0
                total ghg, 0

        '204':
          $ref: "#/components/responses/NoResults"

        '400':
          $ref: '#/components/responses/BadRequest'

        '5XX':
          $ref: '#/components/responses/ServerError'

  /records/{continent}/temp-change:
    parameters:
      - name: continent
        in: path
        required: true
        description: Name of the continent
        schema:
          type: string
          enum: 
            - Africa
            - Antarctica
            - Asia
            - Australia
            - Europe
            - South America
            - North America
      - name: year
        in: query
        required: false
        description: "Year of the creation of the records (range: 1900-1999)"
        schema:
          type: string
          minimum: 1900
          maximum: 1999
    get:
      summary: Retrieve a temperature change records
      tags: 
        - All Records
        - Temperature Change Records
      description: Retrieve temperature change record(s) of a continent, optionally since a specified year and later
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/temp-change"
            text/csv:
              schema:
                type: array
              example: |
                share of temperature change from, 0
                temperature change from *, 0
        
        '204':
          $ref: "#/components/responses/NoResults"

        '400':
          $ref: '#/components/responses/BadRequest'

        '5XX':
          $ref: '#/components/responses/ServerError'
  
  /records/{year}/energy:
    parameters:
      - name: year
        in: path
        required: true
        description: "Year of the creation of the records (range: 1900-1999)"
        schema:
          type: string
          minimum: 1900
          maximum: 1999
      - name: order-dir
        in: query
        required: false
        description: Sort records of countries based on population size
        schema:
          type: string
          enum:
            - ASC
            - DESC
          default: descending
      - name: batch-size
        in: query
        required: false
        description: Size of records batch to be retrieved
        schema:
          type: integer
          enum:
            - 10
            - 20
            - 50
            - 100
          default: 10
      - name: batch-index
        in: query
        required: false
        description: Index of the batch of records (starting from 1) that 
                     indicates which batch is returned (e.g. in batches of 
                     size 10 which are covering values 1-100, index 2 means 
                     that values 11-20 are returned as a batch)
        schema: 
          type: integer
          minimum: 1
          default: 1
    get:
      summary: Retrieve an energy record
      tags: 
        - All Records
        - Energy Records
      description: Retrieve energy records of countries for a specified year 
                  sorted per population size and split in batches
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/energy"
            text/csv:
              schema:
                type: array
              example: |
                energy per capita, 0
                GDP per capita, 0

        '204':
          $ref: "#/components/responses/NoResults"

        '400':
          $ref: '#/components/responses/BadRequest'

        '5XX':
          $ref: '#/components/responses/ServerError'

  /records/countries:
    parameters:
      - name: ncountries
        in: query
        required: true
        description: Number n (≥1) of countries to be retrieved
        schema:
          type: integer
          minimum: 1
      - name: order-by
        in: query
        description: Sorting filter for the countries
        schema:
          type: string
          enum:
            - share_of_temperature_change_from_ghg
          default: share_of_temperature_change_from_ghg
      - name: order-dir
        in: query
        required: false
        description: Order in which the countries are retrieved based on the filter
        schema:
          type: string
          enum:
            - ASC
            - DESC
          default: descending
      - name: period-type
        in: query
        required: true
        description: Time period type on which the countries will be sorted
        schema:
          type: string
          enum:
            - specific-year
            - last-m-years
      - name: period-value
        in: query
        required: true
        description: Time period value
        schema:
            type: integer
            minimum: 1
            maximum: 1999
            description: |
              If period-type is 'specific-year', period-value must be between 1900 and 2023.
              If period-type is 'last-m-years', period-value must be between 1 and 100.
    get:
      summary: Retrieve countries
      tags: 
        - All Records
        - Countries
      description: Retrieve a number of countries with an optional sorting filter
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/country"
            text/csv:
              schema:
                type: array
              example: |
                name, string
                share of temperature change from ghg, 0
        
        '204':
          $ref: "#/components/responses/NoResults"

        '400':
          $ref: '#/components/responses/BadRequest'

        '5XX':
          $ref: '#/components/responses/ServerError'