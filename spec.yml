openapi: '3.0.2'
info:
  title: CO2 and GHG API
  version: '1.0'
  description: 'Specification of the CO2 and GHG API from Group 23 
                of the 2023-24 Web Engineering course at the University of Groningen.'

# Stipe: 
# So far I think we should crete two main entities: records and areas
# The records are of different types (e.g. emission) to minimize network traffic and to easily satisfy different bulletpoints of REQ1
# The areas are also of two types: countries and continents 
# This is because they have different properties (e.g. continents do not have iso codes), have different data, and are implicitly differentied in the data (countries, continents, lists of countries, ...?)

# This might be useful when either the name or the iso code of a country can be used:
# https://stackoverflow.com/questions/53782328/how-to-require-at-least-one-of-two-parameters-in-openapi
# further specify endpoint paths? e.g. in energy records, '/records/emission-records/per-year'? 
# it's a bit wonky how the endpoint queries should be used? e.g. it's not set that we either the name or the iso code of a country query should be used

# for the multiple identifiers, we could have multiple endpoints? e.g. one for iso-code and one for country name, etc.

servers:
  - url: http://localhost:3001
    description: ExpressJS backend

# TODO
# - update and integrate json schemas - christopher
# - endpoint operation summaries - stipe
# - response codes including example values and media type csv (all) and json (except 200)- andro

components:
  schemas:
    general:
      type: object
      properties:
        GDP:
          type: integer
          description: GDP of the country
        population:
          type: integer
          description: Population of the country

    emission:
      type: object
      properties:
        co2:
          type: integer
          description: CO2 emission of the country
        methane:
          type: integer
          description: Methane emission of the country
        nitrous oxide:
          type: integer
          description: Nitrous oxide emission of the country
        total ghg:
          type: integer
          description: Total greenhouse gas emission of the country

    temp-change:
      type: object
      properties:
        share of temperature change from:
          type: integer
          description: Temperature change of the country
        temperature change from *:
          type: integer
          description: Temperature change of the country
    energy:
      type: object
      properties:
        energy per capita:
          type: integer
          description: Energy per capita of the country
        GDP per capita:
          type: integer
          description: GDP per capita of the country

    country:
      type: object
      properties:
        name:
          type: string
          description: name of the country
        share of temperature change from ghg:
          type: integer
          description: share of temperature change from ghg of the country

paths:
  /records/general/:
    parameters:
      - name: id-type
        in: query
        required: true
        description: Name of the country or the ISO 3166-1 alpha-3 code of the country.
        schema:
          type: string
          enum: 
            - country-name
            - country-iso-code
      - name: id
        in: query
        required: true
        schema:
          type: string
      - name: year
        in: query
        required: true
        description: Year of the creation of the record.
        schema:
          type: string

    get:
      tags: 
        - All Records
        - General Records
      description: Retrieve the general record of a country for a specific year.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/general"
            text/csv:
              schema:
                  $ref: "#/components/schemas/general"
        '204':
          description: List empty; no results

        '400':
          description: Request was not well-formed, see error details
          content:
            application/json:
              schema:
                type: object
                properties:
                  error-message:
                    type: string
                    description: Error message detailing the problem with the request

        '5XX':
          description: Server error; no results, try again later
    post:
      tags: 
        - All Records
        - General Records
      description: Create the general record of a country for a specific year.
      responses:
        '201':
          description: general info succesfully created.
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/general"
            text/csv:
              schema:
                  $ref: "#/components/schemas/general"
    put:
      tags: 
        - All Records
        - General Records
      description: Update the general record of a country for a specific year.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/general"
            text/csv:
              schema:
                  $ref: "#/components/schemas/general"
    delete:
      tags: 
        - All Records
        - General Records
      description: Delete the general record of a country for the specified year.
      responses:
        '204':
          description: General info succesfully deleted
  
  /records/emission:
    parameters:
      - name: id-type
        in: query
        required: true
        description: Name of the country or the ISO 3166-1 alpha-3 code of the country.
        schema:
          type: string
          enum: 
            - country-name
            - country-iso-code
      - name: id
        in: query
        required: true
        schema:
          type: string
      - name: year
        in: query
        required: false
        description: Year from which to get records.
        schema:
          type: string
    get:
      tags: 
        - All Records
        - Emission Records
      description: Get emission record(s) of a country, optionally since a specified year and later.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/emission"
            text/csv:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/emission"

  /records/temp-change/:
    parameters:
      - name: continent-name
        in: path
        required: true
        description: Name of the continent.
        schema:
          type: string
      - name: year
        in: query
        required: false
        description: Year from which to get records.
        schema:
          type: string
    get:
      tags: 
        - All Records
        - Temperature Change Records
      description: Get temperature change record(s) of a continent, optionally since a specified year and later.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/temp-change"
            text/csv:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/temp-change"
  
  /records/energy:
    parameters:
      - name: query
        in: path
        required: true
        description: Year of the creation of the records.
        schema:
          type: string
      - name: sort-per
        in: query
        required: false
        description: Sort records of countries on descending population size.
        schema:
          type: string
          enum:
            - none
            - population-size
          default: none
      - name: batch-size
        in: query
        required: false
        description: Size of records batch to be retrieved.
        schema:
          type: integer
          enum:
            - 10
            - 20
            - 50
            - 100
          default: 10
      - name: batch-idx
        in: query
        required: false
        description: Index of the batch of records.
        schema: 
          type: integer
          default: 1
    get:
      tags: 
        - All Records
        - Energy Records
      description: Get energy records of countries for a specified year 
                  optionally sorted per population size and split in batches.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/energy"
            text/csv:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/energy"

  /areas/countries/:
    parameters:
      - name: n-countries
        in: query
        required: true
        description: Number n (â‰¥1) of countries to be retrieved.
        schema:
          type: integer
      - name: filter
        in: query
        description: Sorting filter for the countries.
        schema:
          type: string
          enum:
            - none
            - climate-change-contribution-share
          default: none
      - name: order
        in: query
        required: false
        description: Order in which the countries are retrieved based on the filter.
        schema:
          type: string
          enum:
            - ascending
            - descending
          default: descending
      - name: period-type
        in: query
        required: true
        description: Time period type on which the countries will be sorted.
        schema:
          type: string
          enum:
            - specific-year
            - last-m-years
      - name: period-value
        in: query
        required: true
        description: Time period value.
        schema:
          type: integer
    get:
      tags: 
        - All Areas
        - Countries
      description: Retrieve a number of countries with an optional sorting filter.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/country"
            text/csv:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/country"